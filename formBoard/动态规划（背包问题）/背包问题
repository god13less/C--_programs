普通背包：
int dp[2000000];
int w[40],v[40];

for (int i = 1; i <= n; i++) {
     for (j = v; j >= w[i]; j--) {
         dp[j] = max(dp[j], dp[j - v[i]] + w[i]);
     }
}

完全背包：
for (int i = 1; i <= n; i++) {
    for (int j = v[i]; j <= v; j++) {
        dp[j] = max(dp[j], dp[j - v[i]] + w[i]);
    }
}

二维背包：
ll v[55],m[55],k[55];
ll dp[550][550];

for (int i = 1; i <= N; i++) {
     for (int j = V; j >=v[i] ; j--) {
        for (int l = M; l >= m[i]; l--) {
           dp[j][l] = max(dp[j][l], dp[j - v[i]][l - m[i]] + k[i]);
        }
    }
}

分组背包：
group[1010],dp[1010];//group[]来记录每组的物品个数
ll G[1010][1010][2];//0:M,1:W;

for (int i = 1; i <= groupNumber; i++) {
    for (int j = M; j >= 0; j--) {
        for (int k = 1; k <= group[i]; k++) {
            if (j >= G[i][k][0]) {
                dp[j]=max(dp[j],dp[j-G[i][k][0]]+G[i][k][1]);
            }
        }
    }
}
