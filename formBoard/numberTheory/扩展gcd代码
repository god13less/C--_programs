ll ex_gcd(ll a, ll b, ll &x, ll &y) {
    ll GCD, t;
    if (!b) {
        x = 1;
        y = 0;
        return a;
    }
    GCD = ex_gcd(b, a % b, x, y);
    t = x;
    x = y;
    y = t - (a / b) * y;
    return GCD;
}

ll inv(int a, int mod) {
    ll x, y;
    ll GCD = ex_gcd(a, mod, x, y);
    return GCD ? (x % mod + mod) % mod : -1;
}

ll solve_ex_gcd(ll a, ll b, ll c, ll &x, ll &y)
{
    ll d = ex_gcd(a, b, x, y);
    if((c % d) != 0) {
        x = -1;
        y = -1;
        return -1;
    }
    x *= (c / d);
    b = abs(b / d);
    x %= b;
    while(x < 0) {
        x += b;
    }
    y = (c - a * x) / b;
    return 0;
}

int main() {
    ll x, y, a, b, c;
    scanf(“%lld%lld%lld”,&a,&b,&c);
    solve_ex_gcd(a, b, c, x, y);
    cout << x << endl;
}